%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 25.0.1%%For: (Brady Erickson) ()%%Title: (Asset 171.eps)%%CreationDate: 6/19/21 3:39 PM%%Canvassize: 16383%%BoundingBox: -426 -426 656 656%%HiResBoundingBox: -425.775 -425.775 655.225 655.225%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 114.725 114.725 114.725 114.725%AI3_TileBox: -191.275 -281.275 420.725 510.725%AI3_DocumentPreview: Header%AI5_ArtSize: 1081 1081%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -1155 777.45 1 2548 1389 26 0 0 6 43 0 0%AI5_OpenViewLayers: 7%%PageOrigin:-424 -426.55%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 0%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 128 8%%BeginData: 23944 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD41FFA8FD70FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD06FFA8A8FFFF%FFA8FD66FFA8FFFFFFA8FFFFFFA8FD07FFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FD58FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%A8A8FFFFA8A8FFFFA8A8FFFFA8A8FFFFA8A8FFFFFFA8FD5BFFA8FD0AFFA8%A8FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD50FFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8A8FFFFA8A8%FFA8A8FFFFA8A8FFFFA8A8FFFFA8A8FFFFA8A8FD4DFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFA8A8FFFFA8A8FFFFA8FFFFA8FFFFFFA8FFFFFFA8FFFFA8%FFFFFFA8FFFFFFA8FD04FFA8FD48FFA8A8FFFFFFA8A8FFFFA8A8FFFFA8A8%FFA8A8FFFFA8A8FFFF7DFFFFFF7DFFFFA8A8FFA8A8FFFFA8FFFFFF7DFFFF%FF7DFFFFFF7DFFFFFF7DFFFFFFA8FD46FFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFA8A8FFFFA8FFFFA8FFFFFFA8FFFFA8FFFFFFA8FF%FFA8A8FFFFA8FFFFFFA8FD47FFA8A8FFFFFF7DFFFFFF7DFFFFFF7DFFFFFF%7DFFFFA8A8FFA8A8FFFF7DFFFFFF7DFFFFA8A8FFA8A8FFFF7DFFFFFF7DFF%FFA8A8FFFFA8A8FFFFA8A8FFFFA8A8FFFFFFA8FD3FFFA8FFFFFFA8A8FFFF%A8A8FFFFA8A8FFFFA8FFFFA8A8FFFF7DFFFFA8A8FFA8A8FFFF7DFFFFFFA8%FFFFA8FFFFA8A8FFFF7DFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD3CFFA8%FFFFFFA8A8FFFFA8A8FFFFA8A8FFFFA8A8FFFF7DFFFFFF7DFFFFA8A8FFA8%A8FFFF7DFFFFA8A8FFA8A8FFFF7DFFFFA8A8FFA8A8FFFF7DA8FFFF7DFFFF%FF7DFFFFFFA8A8FFFFFFA8A8FD38FFA8FFFFFF7DFFFFFFA8FFFFFF7DFFFF%FF7DFFFFA8A8FFFFA8FFFF7DFFFFFF7DFFA8A8FFFFA8FFFFA8A8FFA8A8FF%FF7DFFFFA8A8FFFFA8FFFFA8A8FFFFA8A8FFFFFFA8FD04FFA8FD34FFA8FD%04FFA8A8FFFFA87DFFFFFF7DFFFFA87DFFFFA8A8FFA87DFFFF7DFFFFA8A8%FFA8A8FFFF7DFFFF7DA8FF7DFFFFA8A8FFA8A8FFFF7DFFFFA87DFFFFA8A8%FFFFA8A8FFFFA8A8FFFFFF7DFFFFFFA8FD32FFA8FD04FFA8FFFFFFA8A8FF%FFA8A8FFFFA8FFFFA8A8FFFF7DFFFFA8A8FFA8A8FFFF7DFFFFA8FFFF7DFF%FFA8A8FF7DFFFFA87DFFFFA8FFFF7DFFFFFF7DFFFFFFA8FFFFFF7DFFFFFF%A8FD04FFA8FD33FF7DFFFFFFA8A8FFFFA87DFFFFA87DFFFF7DA8FFFF7DFF%FFA8A8FFA8A8FFA87DFFA87DFFFF7DFFFF7DA8FF7DFFFF7DA8FF7DA8FFA8%7DFFA87DFFFF7DA8FFFF7DFFFFFF7DFFFFFF7DA8FFFFFFA8A8FFFFFFA8FD%2AFFA8A8FD04FFA8FFFFFF7DFFFFFFA8FFFFFF7DFFFFFF7DFFFFA8A8FFA8%A8FFFF7DFFFFA8FFFF7DFFFF7DFFFF7DFFFFA8FFFF7DFFFFA8A8FF7DFFFF%A87DFFFFA8FFFFA8A8FFFFA8A8FFFFA8A8FFFFFFA8A8FFFFFFA8FD2CFFA8%A8FFFFFFA8A8FFFFFF7DFFFFFF7DFFFFFF7DFFFF7DA8FFA87DFFFF7DFFFF%7DA8FF7DFFFF7DA8FF7DFFA8A8FFFF7DFFA87DFFFF7DFFFF7DFFFF7DFFFF%A87DFFFF7DA8FFFF7DFFFFFF7DA8FFFFA87DFFFFFFA8A8FD2DFFA8A8FFFF%FFA8A8FFFFA87DFFFFA87DFFFFA8A8FFA87DFFFF7DFFFFA8A8FF7DFFFF7D%A8FF7DFFFFA8FFFF7DFFA87DFFFF7DFFA87DFFFF7DFFFF7DFFFF7DFFFFFF%7DFFFFA8A8FFFFA8A8FFFFFF7DFFFFFFA8A8FD04FFA8FD24FFA8A8A8FFFF%FF7DA8FFFFA87DA8FFFF7DA8FFFF7DA8FFA87DFFFF7DA8FFA87DFF7DA8FF%A87DFF7DA8FF7DA8FF52FFA87DFFA87DFF7DA8FF7D7DFF7DA8FFA87DFFA8%7DFFFF7DFFFFFF7DFFFFA87DFFFFFF7DFFFFFFA8A8FD04FF7DFD27FFA8FD%04FF7DFFFFFFA8A8FFFFFF7DFFFFA87DFFFF7DFFFFA87DFFA87DFFFF7DFF%A87DFFA87DFF7DA8FF7DFFFF7DFFA8A8FFA8A8FF7DFFFF7DA8FF7DFFFFA8%A8FFA8A8FFFF7DFFFFFF7DFFFFFF7DFFFFFFA8A8FD04FF7DFD24FFA8FFFF%FFA87DA8FFFFFF7DFFFFFF7DA8FFFF7D7DFFFF7DA8FFFF52FFFF7DA8FF7D%FFFF7DA8FF52FFA87DFFA87DFF7DFFA87DFFA87DFF52FFFF7DFFFF52FFA8%7DFFFF52FFFF7DA8FFA87DFFFF7DA8FFFF7DA8FFFFA87DA8FFFFFF7DFD25%FFA8A8FD04FFA8A8FFFFFF7DFFFFFF7DA8FFFF7DA8FFFF52FFFF7DA8FF7D%A8FFA87DFF7DA8FF7DA8FF7DFFA8A8FF7DA8FF7DFF7DA8FF7DFFFF7DFF7D%A8FFA87DFF7DA8FFA87DFFFF7DFFFFA87DFFFFA8A8FFFFFF7DFD04FF7DFD%04FFA8A8FD21FFA8A8FFFFFFA87DA8FFFFA87DFFFFFF52FFFFFF52FFFFA8%7DFFA87DFFFF52FFA87DFFA852FF7DA8FF7DA8A852FF52A8A87DFF7DA8FF%52FF7D7DFF7DA8FF52FFFF7DA8FF52FFFF7D7DFFA87DA8FFA87DA8FFFF7D%A8FFFFFF7DFD04FFA8A8FD24FFA8FD04FFA8FFFFFFA87DFFFFFF7DFFFFA8%7DFFFF7DA8FF7DA8FF7D7DFF7DA8FF7DFFA87DFF7DFFA87DFF7DA8FF7DFF%52FFA87DFF7DA8FF52FFA87DFFA87DFFA8A8FFFF52FFFF7DA8FFFF7DA8FF%FF7DA8FFFFFF7DFD04FFA8A8FD20FFA8FD04FFA87DFFFFFFA8A8FFFFFFA8%7DFFFFA87DFFFF7DA8FFA87DFFFF52FFA87DFFA87DFF52A8A87DFF7D7DFF%52FF52A8A87DFF7DA8A87DFF52FFA87DFF7D7DFF52FFFF7DA8FF52A8FFA8%7DFFFF7D7DFFFFA87DFFFFFF7DFD04FF7DA8FFFFFFA8A8A8FD1CFFA8FD05%FF7DFD04FF7DA8FFFFA87DFFFF7D7DFFFF7DFFFF52A8FF7D7DFF7DA8FF7D%FFA87DFF52FF7DA8FF7DFF7DA8A852FF52FF7DA8FF7DFF7DA8FF52FFA87D%FFA87DFFA87DFFFF52FFFFA87DFFFFA87DFFFFFF7DFFFFFFA8A8A8FFFFFF%A8A8FD19FFA8FD05FF7DA8FD04FF7DFFFFFFA87DA8FFFF7D7DFFFF7DA8FF%7D7DFFFF52FFA852FFA852FF52A8A852FF7DA8A852FF52FF7DA8A87DFF7D%FF7DA8A852FF52FF7D7DFF7DA8FF52FFFF52A8FF52A8FFA852FFFFA87DFF%FFFF52A8FFFFA87DA8FFFFFF7DA8FD04FFA8FD16FFA8FD05FFA8A8FD04FF%7DA8FFFFA87DA8FFFF7DA8FFFF7DFFFF7DA8FFA87DFF7DA8FF7DA8FF7DFF%52FF7D7DFF7DFF7DFFA8A8A87DFF52FF52FF7DA8A87DFF7DA8FF52FF7D7D%FF7D7DFF7D7DFFFF52FFFFFF52FFFFFF52FFFFFFA87DFD04FF7DFD05FFA8%A8FD17FFA8A8A8FFFFFFA87DA8FFFFFF7DA8FFFFA852A8FFFF52A8FFA87D%FFFF52FFFF52A8FF52FF7D7DFF52FF7D7DFF52FF52FF52FF7DA87D7DA87D%FF52FF7DA87D7DFF52FF52A8FF52A8FF52FFA852FFFF52A8FFA852FFFFFF%52FFFFFF7D7DFD04FF7DFD05FF7DA8FD1AFFA8A8FD04FFA8A8FFFFFF7DA8%FFFFA87DA8FFA852A8FF7D7DFFA852FF7D7DFF7D7DFF52FF7DA8A87DFF52%FF7DA87DA87D7DA87DA87DFF52FF52FF52FF7D7DFF52FFA87DFF52A8FF7D%A8FF7D7DFFFF52FFFFFF52FFFFFF7DA8FFFFFFA87DFD04FFA8A8FD16FFA8%A8A8FD04FFA87DFD04FFA87DFFFFFF7D7DFFFFA852A8FFA852FFFF52A8FF%7D7DFF52A8FF52FF7D7DFF52FF52FF52FF52A87DA87DA8FD067DA852A852%FF52A87D52FF52FFA852FF7D52FF7D52FFFF52A8FFFF52FFFFFF52A8FFFF%A87D7DFFFFFFA87D7DFD05FFA8FD13FFA8A8FD05FF7DA8FFFFFFA87DFFFF%FFA87DFFFFA87DA8FF7D7DFFFF52FFFF52A8FF52FF7DA8FF52FF52FF7DA8%A87DA87DA87DA87DA87DA87DA87DA87DA87DFF52FF52FF7D7DFF52A8FF52%FFA852FFFF52A8FFFF52FFFFFF52A8FFFFA87DA8FFFFFFA8A8A8FD05FFA8%FD15FFA87DFD05FF7D7DA8FFFFFF52A8FFFFA87DA8FFA87DA8FF7D7DFFA8%27FFA852FF7D7DFF27FF52A87D7DA87DA87DA8FD067DA87DA852A852A852%A87D7DA852FF52FF7D52FF52A8FF52A8FF527DFFFF52FFFFFF52A8FFFF7D%7DA8FFFFFF7DA8FD04FFA8A8A8FD18FFA8A8FD04FFA87DA8FFFFFF7D7DFF%FFA87DA8FFA852A8FF527DFF7D52FF527DFF52FF7D7DFF52FF52FF52FF52%FF52A852A87DA87D7DA87DA852A852A852FF52A8A87DFF27FF7D7DFF7D7D%FF527DFFFF52FFFFA852FFFFFF7D7DFFFFFFA87DFD05FF7DA8FD13FFA8A8%A8FD05FFA8A87DFD04FF7D7DFFFFFF7D7DA8FFA8527DFFA852A8FF527DFF%527DFF27FF7D52FF52A852A852A852A852A852A852FD047D52A852A852A8%52A852FF27FF27FF52A8A852FF7D52FF7D52FFA827A8FFA852FFFFFF52A8%FFFFFF7D7DFFFFFFA8A87DFD05FFA8A8A8FD10FFA8A8FD05FFA87DA8FD04%FF7DA8FFFFA87DA8FFFF7D7DFFA852A8FF52A8FF52A8FF27FF52A87DA8FD%077DA852A852FD057DA8FD047DA87DA87DA87D7DA852FF52A8FF27FFA852%FFFF27FFFFA852FFFFA852A8FFFFA87DA8FFFFFFA8A8A8FD05FFA8A8FD13%FFA8A87DFD05FF7D7DA8FFFFFF7D7DA8FFFF7D7DFFFF7D52FFA852A8FF27%A8A827FF7D52FF27FF27FF27A827A852FD047D52FD047D527D527D7D7DA8%52A852A852A852A87D52FF27FFA852FFA827FFFF7D52FFFF7D52FFFFFF7D%7DFD04FF7DA8FD04FFA8A8A8FD10FFA8FD07FF7DA8A8FFFFFFA87D7DFFFF%FFA87DA8FFFF7D52FFFF7D52FFA852A8FF27FF7D52FF52A8FD087D52FD04%7D52A852FD057D52A852A852FD057D52FF27FF27A8FF52FFFF27FFFF7D7D%FFFF7D7DFFFFA852A8FFFFFF7D7DFD05FFA8A8A8FD05FFA8FD0CFFA8A8A8%FD05FFA87D7DFD04FFA852A8FFFFA87D52FFFFA827A8FF7D27FFA827A8A8%27FF527DA827A852A8527D527D52527D527D527D7D52527D527D52527D7D%527D27A827A827FF27FF527DFF27A8FF27FFFF527DFFA8527DFFFF7D52FF%FFFF7D7D7DFFFFFFA87D7DFD06FFA87DA8A8FD0EFFA8A8A8FD05FF7DA8A8%FFFFFF7D7DA8FFFFA852A8FFFF52A8FFA827FFA852FFA827FF52A8FD067D%527D527D527D527D527D527D527D527D527D7D527D7D7DA852A8527DA852%FF52A8FF27FFFF527DFF7D52A8FFA8527DFFFFA852A8FD04FF7DA8A8FD05%FFA8A8A8FD12FFA8A87DA8FD04FFA87D7DFFFFFFA87D52FFFFFF527DFFFF%5252FFA827A8A852A87D27FF27A827A827A8277D527DFD05527DFD07527D%527D52527D527D527D52A827FF527DFF27FFA852A8FF527DFFFF527DA8FF%A87D52FFFFFFA87D7DA8FD04FFA8A87DFD0FFFA8A8FD07FF7DA8A8FD04FF%A87D7DA8FFFFA8527DFFFF7D52A8FF7D52FFFF27A8A852A87D52A827A827%A8527DFD0C52277D5252527D527D527D7D527D52A852A87D7DFF27FFA852%A8FF277DFFA852A8FFFF7D52A8FFFFFF7D7DA8FD04FFA87DA8FD06FFA8FF%A8FD0AFF7DA8A8FD05FFA8A87D7DA8FFFFFF7D7D7DFFFFFF7D527DFFA852%52FFA8277DFF277DA827A852527D527DFD085227FD075227522752275252%52277DFD04527D7D52A8F8A87D52FFA827A8FF7D27FFFFA8527DFFFFA87D%52A8FD04FF7D7D7DFD05FFFD05A8FD0EFFA8A8A8FD05FFA87D7DA8FFFFFF%A8527DFFFFA87D52FFFF7D52FFFF527DFF527DA827A8527D527D527DFD05%522752525227FD0C527D527D527D527D52A827FF7D52FF7D52FFA8527DFF%FF7D52FFFFFF7D7DA8FFFFFFA87D7DFD07FFA8A8A8FD0AFFA8FD07FFA8A8%7DA8A8FD05FF7D7D7DFFFFFF7D7D7DFFFFA8527DFFFF277DFF7D27FF5252%A8277D527DFD0552275227522752FD05275227272752275227525252277D%277D27A827A85252A85252FF5252A8FF5252A8FFA87D52A8FFFFFFA8527D%A8FD04FFA87DA8A8FD0EFFA8A8A8FD07FFA8A87DA8A8FD04FFA8527DA8FF%FFA8527DFFFF7D527DFF7D52A8A827A87D52A8527D527DFD05522752FD09%275227272752275252522752277D27A827A8527DA8527DFF277DFFA8277D%FFFF7D527DFFFFFF7D7D7DFD05FF7DA87DFD09FFA8FD08FFFD04A87DFFA8%FD05FFA87D7DA8A8FFFFFF7D7D52A8FFFF7D5252FFFF5227FFA82752A827%7D7D527DFD05522752FD0427F827F827F827F8FD0A27522752277D277D27%7D7D52A87D27FFA85252FFFF7D27A8FFFF7D7D52A8FD04FF7D7D7DA8A8FD%05FFA8A87DA8A8FD0EFFA8A87DFD07FFA87D7DA8FFFFFFA8527D7DFFFFA8%527DFFFF527DA87D52A8527D7D527D52525227522752FD0427F827F827F8%27F827F8FD082752277D277D277D527DA85252FF5252A8FF7D527DFFFFA8%527DA8FFFFFFA87D7DA8FD06FFFD05A8FD0AFFA8FD09FF7DA87DA8A8FD05%FF7D7D52A8FFFFA87D527DA8FF7D527DFF7D527DA8277D52527DFD045227%2727F827F827FD0DF827F8FD0427522752277D277D52527D7D277DFF7D27%7DFFFF52527DFFFFFF7D7D527DA8FD04FFA87DA87DA8A8FD07FFA8FD04FF%A8FFA8A8A8FD09FFA8A87DA8A8FD04FFA87D7D7DA8FFFF7D5252FFFF7D27%7DA87D27A8FD0852FD0427F827FD0DF827F827F8FD0427522752277D527D%7D5252FF7D527DFFA87D52A8FFFFA87D527DA8FFFFFFA8A87D7D7DA8A8FD%07FFA8FFA8A8A8FD06FFA8FFA8A87DA8A8FFA8FD05FFA8A8527D7DA8FFFF%FFA8525252FFFFA852527DFF52527DA8275252522752FD0427F827FD15F8%27F82727522752277D52527D7D277DA8A82752A8FFA87D527D7DFFFFFFA8%7D527D7DA8A8FD05FFA8A87DA87DA8A8FD0EFFA8A87DA87DA8A8FD05FFA8%A87D7D7DA8FFFFFFA852527DFFA87D527DA87D527D7D5252522752FD0427%FD15F827F82727522752527D527D7D527DA87D527DFFFFA8527D7DFFFFFF%FD057DFD07FFA8A87DA8A8FD0CFFA8FD0BFFA8A87D7D7DA8A8FD04FFA87D%7D527DA8FFA87D27527DA87D52527DFD045227522727F827FD19F827F827%2752277D52527D7D527DA8A852527DFFFFA87D7D527DA8FD05FFFD057DA8%A8FD09FFA8FFA8FFFFFD07A8FD0AFFA8FD057DA8FD04FF7D7D527DA8FFA8%7D527D7D7DFD065227522727FD19F8FD0427FD04527D52527DA8525252A8%FFA8525252A8A8FFFFFFA8A87D7D7DA8A8FD09FFA8FFA8A8A8FFA8FD06FF%A8FFA8A87DA87DA87DFD04A8FD05FFA8A8527D527D7DFFFFFF7D7D52527D%A87D52527D52522752FD0427FD1DF82727522752277D525252A8A87D5252%52A8A8FFA8A8527D527D7DFD07FFA8A8A87D7DA87DA8A8FFA8FD10FFA8FF%A8A87DA87D7D7DA8A8FD05FFA8A8525252A8A8FFA8A85252527DFD045227%52FD0427FD1BF82727522752527D527D7D7D527D7DA8A8A87D7D527D7DA8%FD06FFA8A87D7D7DA87DA8A8FD0CFFA8FFA8FFA8FD0DFFA8A8FD047D527D%7DA8A8FFFFA87D7D5252527D7D7DFD045227522727F827FD1DF827275227%FD05527DA87D7D5252527DA8FFFFFFA8A87D7D52FD047DA8A8FD0DFFA8FF%A8FFFFA8FFFD06A87DA8A8FFA8FD0BFFA8A87D7D527D7DA8A8FFA8A87D7D%527DFD045227522727FD1DF8FD0427FD04527D5252527D7DA8A8A87D7D52%7D527D7DA8A8FD09FFA8FFFD0BA8FD08FFA8FFA8FFA8A8FD097DA87DA8A8%FD05FFA8A87D7D5252527D527DFD04522752F827FD1FF8FD0427FD04527D%527DFD05527DA8FD05FFA8FFA8A8FD097DFD04A8FFA8FD18FFA8FFFD04A8%7D7D527D527D527D7DFD05A8FD047D527D5252FD0427FD1DF827F8272727%5252527D527D7DFD05A8FD047D527D52FD047DA8A8FFA8FD12FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FD0FFFA8A87D7D527D5252527DFD0452FD0427%FD1FF8FD062752527DFD0552FD047DA8A8FD0DFFA8FFA8FFA8A8A8FFA8FF%A8FFA8FFA8FFFFA8FFFD0AA87DA87D7D7DA8FD047D52FD047DA87D7D7DA8%A8A87D7D7DA87D7DFD055227F827FD1FF82727FD0652FD047DA8A8A87DA8%FD0A7D527D7DA87DA87DA8A8A87DFD08A8FFA8FD10FFA8FFA8FFA8FFFD04%A87DA87DA87DA8FD047D527DFD04522752FD0427FD21F82727FD04527D52%7D7D7D52FD047DA87DFD06A8FFA8FFA8FFA8FD28FFA8FFFD06A87DA87DA8%FD047D527DFD0452FD0427FD1FF8272727527D527D52FD067DA87DFD04A8%FFA8FFA8FFA8FFA8FD14FFA8FFA8A87DA8A8A87DA87DA87DA87D7D7DA87D%7D527D7D7D527D52FD067DA8FD067D5252275252522727FD21F82727FD05%527DA87D7D7DA87DA8FD067D527D52FD047DA87D7D7DA87DA87DA87DA87D%FD04A8FFA8FD06FFA8FFFFFFA8FFA8FFA8FD0FFFFD04A87D7D527D527D52%7D527D272727522727FD1FF82727522752527D527D527D527D527D7DA8A8%FD0FFFA8FFFFFFA8FFFFFFA8FD05FFA8FD12FFFD04A87D7D527D527D5252%527D7DA87DA8A87D527DFD0452FD0427FD1FF8272727F8FD06527D7DA8A8%A87DA87D7D527D527D52FD047DFD04A8FD1AFFA8FFA8A87DA87DA87D7D7D%A87DA8A8FD07FFA8A87D7D52FD057D527D5252FD0427FD1DF827F82727FD%0452FD057D5252527D7DA8FD06FFFD04A87D7D7DA87DA87DA87DA8A8FD0A%FFFD0DA8FFA8FD09FFA8A87D7D5252527D7DA8A8A87D7DFD065227522727%FD1FF8FD0427FD04527D52527DA8A8A87DA85252527D527D7DFD09FFA8FF%A8FFA8A87DFD08A8FD04FFA8FD0DFFA8FFA8A8FD057DA8A8FFFFFFA8A852%52527D7DA87D7D527D525227522727FD1DF827F827275227FD0452FD047D%52527D7DFD05FF7D7D52FD047DA8A8FD0DFFA8FFFFFFA8FD0AFFA8FFA8A8%FD057DFD04A8FFFFFFA8A87D7D52527DA8A8A87D52527D527D5252275227%27F827FD1DF827275227FD04527D5252527DA8FFA87D5252527D7DFD05FF%A8A8FD057DFD04A8FD12FFFD04A87DA8A8FFA8FD07FF7D7D527D7DA8A8FF%FFA87D5252A8A8A85252527DFD0452FD0427FD19F827F82727522752527D%527D527D7DA87D7D527DA8FFFFFF7D7D527D7DA8A8FD07FFA8A87DFD05A8%FD07FFA8FFFD07A8FD09FFA87D7D7D527DA8FFFFFFA8A8525252A8A8A852%52527D7DFD0552FD0427FD1BF827F827275227FD04527D7D7D277DA8FFA8%7D527D7DFFFFFFA8A8FD057DA8A8FD07FFA8FFFD07A8FFFFA8FD0BFFA8A8%FD047DA8FD05FFA87D527D7DFFFFFF7D5252A8A8A8527D7D7D527D5252FD%0427FD19F8FD04275227FD04527D52527DFF7D52527DFFFFA87D527D7DA8%FD04FFA8A87D7D7DA8A8FD0BFFA8FD0AFFA8FFA8A87D7D7DA8A8FD05FF7D%7D527D7DFFFFFF7D52527DA8FF525252A85252527D275227522727F827FD%19F8FD0427FD04527D277D7D7D277DA8FF7D52527DFFFFA8A8527D52A8A8%FD05FFA8A87DA87DA8A8FD0EFFFD05A8FFA8FD07FF7D7D7DA8A8FFFFFFA8%7D527DA8FFA87D52A8A87D527D7D52527D27522752FD0427F827FD13F8FD%0427FD05527D7D52A87D527DFF7D5252FFFFFF7D7D52A8FD04FF7D7D7DA8%A8FD07FFFD05A8FD08FFFD05A8FD07FFA8A87D7D7DA8A8FFFFFFA87D527D%A8FFFFA85252A8FF7D527DFF52527D7D527D27522752FD0427F827FD11F8%27F8FD0427FD0652A8277DA87D277DFFA852527DFFFFA8525252A8FD04FF%A87D7DA8A8FD07FFA8FFFD05A8FD0CFFA8A87DA87DFD05FFA8A8527DA8FF%FFFF7D527DFFFF7D277DFF7D27A8A8527D7D277D277D5252FD0627F8F8F8%27F8F8F827FD05F827F8FD0427FD05527D527D7D27A87D527DFF7D527DFF%FF7D527DA8FFFFA87D7D7DFD05FFA8A87DA8A8FD14FFA8A87DA8A8FD05FF%A8A8527D7DFFFFFFA87D52A8FFFF7D527DFFA85252FF5252A852527D277D%27522752FD0427F827F8F8F827F8F8F827F827F827F8FD0627FD05527D52%52A8277DA87D27A8FF7D277DFFFF7D5252A8FFFFA8A8527D7DFD05FFA8A8%7DA87DA8A8FD0CFFFD05A8FD06FFA87D7D7DFD04FFA8527DA8FFFFA8527D%FFFF5252A8FF277DA8527DA827A8277D2752275227522752FD0F27522752%275252527D527D527D7D27FF7D52A8FF527DFFFF7D527DFFFFA87D7D7DFF%FFFFA8A87DA8A8FD07FFA8A8A8FD08FFA8A8A8FFA8FD07FF7D7D7DFD05FF%7D7D7DFFFFFF7D527DFFFF7D27A8FF7D27FF7D27A87D27A8277D277D2752%27522727275227272752FD0627F8272752275227FD05527D527D5252A827%A8A8527DFF7D527DFFFF7D527DFFFFA87D52A8A8FFFFFFA8A87DA8A8FD07%FFA8A8A8FD0EFFA8A87DFD05FFA87D52A8FFFFFFA8527DFFFFA85252FFA8%5252FF7D52FF7D52A827A8277D277DFD0652275227272752272727522752%275227FD07527D527D52A85252FF527DFF7D52FFFF7D52A8FFFF7D7D7DFF%FFFF7D7D7DFD05FFA8A87DA8A8FD12FFA8A87DA8A8FD04FFA87D7DA8FFFF%FF7D5252FFFFFF5252A8FF7D52A8FF277DFF5252A827A8277D527D277D27%522752275227522727275227522752275227FD09527D527D27A87D27FF52%52FFA8277DFFFF5252A8FFA87D52A8FFFFFFA87D7DA8FD05FFA8A87DA8A8%FD0CFFA8A8A8FD07FFA87D7DFD04FFA87D7DA8FFFF7D52A8FFFF527DFFFF%27A8FF527DFF27FF52FD057D527D527DFD0652277DFD0C527D7D527D527D%7D7DA827A8A827FF7D52A8FF5252FFFFA87D7DFFFFFF7D7DA8FFFFFFA8A8%7DA8FD06FFA8A8A8FD0AFFA8A8A8FD05FFA8A87DA8FD04FFA87D7DFFFFFF%7D527DFFFF7D52A8FF7D27FFA852A8FF27FF7D52A852A8527D527D52527D%FD065227FD0C527D52A827A827A8527DA827A8A827FFA8527DFFA8527DFF%FF7D52A8FFFFA87D7DA8FD04FFA87D7DFD07FFA8A8FD0FFF7DA8A8FD05FF%7DA8A8FFFFFF7D7DA8FFFF7D52FFFF7D52FFA852A8FF27FF7D52FF52A852%A8527D527D52527D527D527D5252527D527D527D5252527D527D52A852A8%27FF27FF52A8FF52A8FF27A8FF7D52FFFF7D52FFFFFF7D7DA8FFFFFF7D7D%A8FD05FF7DA8A8FD12FFA8A8A8FD05FFA87D7DFD04FF7D52A8FFFF7D52A8%FFA8527DFF7D52A8FF27FF7D27FF527D7D527D527D527D7DFD04527D527D%527D527DFD05527D527D52FD057D52A827FF27A8A827A8FF27A8FF7D27FF%FFA852A8FFFFA87D7DFFFFFFA8A87DA8FD04FFA8A87DA8A8FD0EFFA8FD07%FF7DA8FD04FFA87D7DFFFFFF527DFFFFA852A8FF7D52FFFF27FFA852FF7D%7DFF27FF27FF52A852A8527D7D527D7D527D527D7D7D527D527D527D7D52%A852A852A852A87D52FF27FFA852A8FF52A8FFA852A8FFFF7D7DFFFFFFA8%7DA8FD04FF7DA8A8FD05FFA8A8A8FD0CFFA8FD05FFA8A87DFD05FF7D7DA8%FFFFA852A8FFFF7D52FFFF5252FFFF27FFA852A8A827FF27A8527D7D7D52%7D527D52A8527D527D7D7D52A8527D527D7D52FD047D527D7D7DA852FF52%7DFF27FFA852A8FF527DFFFF527DFFFF7D7DA8FFFFFF7D7DA8FFFFFFA8A8%7DFD07FFA8FD10FFA8A8A8FD04FFA87DFD04FF7D7DFFFFFF527DFFFF527D%FFFF27FFFF52A8FF27FF527DA852FF52A852A852A852FD047D52FD087DA8%52A852FF52FF27FF27FF7D7DFF52FFFF27FFA852A8FF527DFFFF7D7DFFFF%FF7D7DFFFFFFA87D7DFD05FFA8A8A8FD12FFA8A87DFD05FFA87D7DFFFFFF%A87DA8FFFFA852A8FFFF527DFFA827A8FF527DFF27A8A852FF52A87D7DA8%52A852FD047D527D527D7D527D52A8527D52FD087DA827FF27A8A852FFA8%27FFA852A8FF7D52FFFF7D52A8FFFFA852A8FFFFFFA87DA8FD04FFA8A87D%FD10FFA8A8A8FD05FF7DA8FD04FF7D7DFFFFFFA852FFFFFF52A8FFFF27FF%FF7D7DFF52A8FF52A8A852FF27FF52FF52FF52A852FF52A852A8FD047DA8%52A87DA87DA87DA852FF52FF7D7DFF52FF7D7DFF7D52FFA852A8FFA852A8%FFFF7D7DFFFFFF7DA8FD04FFA8A8A8FD05FFA8FD15FFA87DFD05FF7DA8FF%FFFF7D7DFFFFA852A8FFFF52A8FF7D52FF7D52FF7D7DFF27FF7D7DA852A8%52A852A852A87DA8FD047DA852A852A852FF52FF27FF52A87D7DFF52FF7D%52FF527DFF7D52FFA852A8FFA852A8FFFF7D7DFFFFFF7D7DA8FFFFFFA8A8%7DFD05FFA8FD12FFA8A8A8FD04FFA87DFFFFFFA87DA8FFFFA852FFFFFF52%FFFFA852FFA852FFA852FF7D7DFF52FF7DA8A87DA852A87DA87DA87DA87D%A8A87DA87DA87DA87DA87D7DA852FF52FF7D7DFF52A8FF52A8FF7D7DFFA8%7DA8FFA87DA8FFFFA87DFFFFFFA8A87DFD05FF7DFD16FFA8A8FD04FFA87D%A8FFFFFFA87DA8FFFFA852FFFFFF52FFFFA852FFFF52A8FF27FFA852FF7D%7DFF52FF52FF52A87DA8FD077DA87D7D7DA8FD047DA852FF52A87D52FF27%FFA852FFFF27FFFF527DFFA852A8FFA87D7DFFFFA852A8FFFFFFA87DFD05%FFA8A8A8FD12FFA8FD05FFA8A8FD04FF7DA8FFFFFFA87DFFFFFF52FFFFA8%52FFFF7DA8FF7DA8FF7DA8FF52FF7DA8A87DFF52FF7DA87DFD04A87DA87D%A87DA87DFF52FF52FF52FF7D7DFF52FFA852FF7D7DFFA852FFFF7DA8FFA8%7DA8FFFF7D7DFFFFFF7DA8FD04FF7DA8FD05FFA8FD17FF7DA8FD04FF7DA8%FFFFFFA87DFFFFFF52FFFFFF52FFFF7D7DFFA87DFFA852FF7D7DFF52FF7D%7DFF52FF52FF52FF52A87DA87D7DA87DA87DFF52FF7DA87D52FF52FF7D7D%FF527DFF52A8FF7D7DFFA852A8FFA87DA8FFFF7D7DFFFFFF7D7DA8FFFFFF%A8A8A8FD1AFFA8FD05FF7DFD04FF7D7DFFFFFF52FFFFFF52FFFFA852FFFF%52A8FF52FFFF52FFA87DFF52FF7DA8A87DFF7DFF7DA87D7DA87DFF52FF52%FF52FF7D7DFF52FF7D7DFF52FFFF52FFFF52FFFF7DA8FFA87DFFFFA87DA8%FFFFA87DFFFFFFA87DA8FFFFFFA8A8A8FD17FFA8A8FD04FFA87DFFFFFFA8%7DA8FFFFFF52FFFFFF52A8FFFF52FFFF7D7DFF7D7DFF7D7DFF52FFA87DFF%52A8A87DFF52FF52FF7DA8A87DA87DFF52A87D7DFF52FF52A8A852FF7D52%FF7D7DFFA852FFA852A8FFA87DFFFFA87DA8FFFFA87DFFFFFFA8A8A8FD04%FFA8A8FD1BFFA8A8FD04FFA8A8FFFFFF52FFFFFF7DA8FFFF52A8FFA87DFF%A87DFFFF52FFA87DFF7DA8FF52FF7DA8A87DFF7DFFA8A8A87DFF52FF7DFF%A87DFF7DFFA87DFF7DA8FF7DFFFF52FFFF7DA8FFA87DFFFFA87DFFFFA87D%A8FFFFFF7DFD04FFA8A8FD1EFFA8A8A8FFFFFFA87DA8FFFFFF7DFFFFFF7D%A8FFFF7DA8FFFF52FFFF7D7DFF7DA8FF7DA8FF52FF7D7DFF7DA8A87DFF52%FF52A8A87DFF7DFF7D7DFF52FF7DA8FF52FFA852FF7D7DFFA852FFA852A8%FF7D7DFFFF7D7DFFFFA87DA8FFFFFF7DFD05FF7DFD1DFFA8A8FFFFFFA8A8%FD04FF7DFFFFFFA8A8FFFFA87DFFFF7DA8FFA87DFFA87DFFFF52FFA87DFF%7DA8FF52FF7DA8A87DFF7DA8FF7DFF52FFA87DFF7DFFA852FF7DA8FF7DA8%FF52FFFF7DA8FFA87DFFFF7DA8FFFF7DA8FFFFFFA8A8FFFFFF7DFD05FFA8%FD20FFA8A8A8FFFFFF7DFFFFFFA87DFFFFA87DFFFF7D7DFFFF52FFFF7D7D%FF7DA8FF7DA8FF52FFA87DFF7DA8A852FF52A8A87DFF7DA8FF52FF52A8FF%7DFFA852FF7D7DFFA87DFFA87DFFFF7DA8FFFF52A8FFFF7DA8FFFFA87DA8%FFFFFF7DA8FD04FFA8FD1EFFA8A8FD04FF7DFFFFFFA8A8FFFFFF7DFFFFFF%7DFFFF7DA8FFFF7DFFFF7DFFFF52FFA87DFFA87DFF7DFFA87DFF7DA8FF7D%FF7DFFFF7DFFA87DFF7DFFFF7DFFFF7DFFFF7DFFFF7DA8FFFF7DFFFFFF7D%FFFFFF7DFD04FFA8FD04FFA8A8FD21FFA8A8FD04FF7DFFFFFFA87DFFFFFF%7DA8FFFF7DA8FFFF7DFFFF7DA8FFA87DFF7D7DFF7D7DFF52A8A87DFFA87D%FF7DFFA87DFF7D7DFF7DFFA87DFFA87DFF7DA8FFA87DFF7D7DFFFF52FFFF%A87DFFFFA87DFFFFFF7DFFFFFFA8A8A8FFFFFFA8A8FD25FF7DFD04FFA8FF%FFFFA87DFFFFA87DFFFFA8A8FFA87DFFFF52FFFF7DA8FF7DFFFF7DFFFF7D%FF7DA8FF7DFFFF7DFFA8A8FF7DA8FF7DFFA87DFFFF7DFFA87DFFFF7DFFFF%A87DFFFFA8A8FFFFA8A8FFFFFF7DFFFFFFA8A8FD04FFA8FD24FF7DFD04FF%7DA8FFFFA87DFFFFFF52FFFFA852FFFF7DA8FFA87DFFFF7DFFA87DFFA852%FFA87DFF7DA8FF52FFA87DFFA87DFF7DA8FF7DA8FF52FFFF7DA8FF7DA8FF%A87DFFFF7DA8FFFF7DA8FFFF7DA8FFFFFF7DFFFFFFA87DA8FD26FF7DFD04%FFA8A8FFFFFF7DFFFFFF7DFFFFFF7DFFFFFF7DFFFF7DA8FF7DA8FFA87DFF%A8A8FFA8A8FF7DFFFF7DFFFF7DFFA87DFFA87DFF7DA8FFA8A8FFA8A8FFFF%7DFFFF7DA8FFA8A8FFFFA8A8FFFFFFA8FD04FFA8FD04FFA8FD25FFA8FD04%FFA8A8FFFFFF7DFFFFFFA8A8FFFFA8A8FFFF7DA8FFFF7DFFFF7DA8FF7DA8%FF7DA8FF7DA8FF7DA8FF7DFFFF7DFFFF7DFFA87DFFA87DFFA87DFFFF7DFF%FF7DA8FFA8A8FFFF7DA8FFFF7DA8FFFFA8A8FFFFFFA8A8FFFFFFA8FD29FF%A8A8FFFFFFA8A8FFFFA8A8FFFFFFA8FFFFA8A8FFFF7DA8FFFF7DFFFF7DFF%FF7DFFFF7DA8FF7DFFFFA8FFFF7DFFA87DFFFF7DFFFF7DFFFF7DFFFFA8A8%FFA8A8FFFF7DFFFFFF7DFFFFFF7DFFFFFFA8A8FFFFFFA8A8FD2CFFA8FFFF%FFA8A8FFFFFF7DA8FFFFA8A8FFFF7DA8FFA87DFFFF7DA8FFA87DFFA87DFF%FF7DFFFF7DA8FF7DFFA87DFFFF7DFFFF7DA8FF7DFFFF7DA8FFA8A8FFFF7D%FFFFA87DFFFFA87DFFFFFF7DFFFFFF7DA8FFFFFFA8A8FD2FFFA8FFFFFFA8%A8FFFFFF7DFFFFFF7DFFFFA8A8FFFFA8FFFF7DA8FFFF7DFFA8A8FFFF7DFF%FFA8FFFF7DFFFFA8FFFF7DFFFFA8A8FFA8A8FFFF7DFFFFA8A8FFFFA8FFFF%FFA8FFFFFFA8A8FFFFFFA8FD32FFA8A8FD04FF7DFFFFFF7DFFFFFF7DFFFF%FF7DFFFFFF7DFFFFA8A8FF7DA8FFA87DFFA87DFFFF7DFFFFA8A8FF7DFFFF%7DA8FFA8A8FFFF7DFFFFA8A8FFA87DFFFFA8A8FFFFA8A8FFFFFFA8A8FFFF%FF7DFD32FFA8FFFFFFA8FFFFFFA8A8FFFFA8A8FFFFA8A8FFFF7DFFFFFF7D%FFFFA8A8FFA8A8FFFF7DFFA8A8FFFF7DFFFFA8A8FFA8A8FFFF7DFFFFA8A8%FFA8A8FFFF7DFFFFFF7DFFFFFFA8FFFFFFA8A8FD39FFA8A8FFFFFFA8A8FF%FFA8A8FFFFA8A8FFA87DFFFFA8A8FFFF7DFFFFA8A8FFA8A8FFFF7DFFFFA8%A8FF7DA8FFFF7DFFA8A8A8FF7DA8FFFF7DFFFFFF7DFFFFFF7DFFFFFF7DFF%FFFFA8A8FD38FFA8FFFFFFA8A8FFFFFFA8FFFFFF7DFFFFFFA8FFFFA8A8FF%A8A8FFFF7DFFFFFFA8FFA8A8FFFFA8FFFFA8A8FFA8A8FFFF7DFFFFFFA8FF%FFA8A8FFFFA8FFFFFFA8FD04FFA8FFFFFFA8FD3CFFA8FFFFFFA8FFFFFFA8%A8FFFF7DFFFFFF7DFFFFA8A8FFFFA8FFFFA8FFFFA87DFFFF7DA8FFA8A8FF%FF7DFFFFA8A8FFFFA8FFFFA8A8FFFFA8A8FFFFA8A8FFFFFFA8A8FD3EFFA8%FFFFFFA8A8FFFFFFA8FFFFFFA8FFFFA8A8FFFFA8FFFFFF7DFFFFA8A8FFA8%A8FFFFA8FFFFFFA8FFFFA8FFFFA8A8FFFFA8FFFFFF7DFFFFFFA8FFFFFFA8%FFFFFFA8FD43FFA8A8FFFFA8A8FFFFA8A8FFFFA8A8FFFFA8A8FFA8A8FFFF%7DFFFFFFA8FFFFA8A8FFA8A8FFFF7DFFFFFF7DFFFFA87DFFFFA8A8FFFFA8%A8FFFFFFA8FFFFFFA8FD42FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFA8A8FFFFA8FFFFA8FFFFFFA8FFFFA8A8FFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FD4DFFA8A8FFFFA8A8FFFFA8A8FFFFA8A8FFFFA8FFFFFFA8%FFFFFFA8FFFFA8A8FFA8A8FFFFA8A8FFFFA8FFFFFF7DFFFFFFA8FFFFFFA8%FD52FFA8FFFFFFA8FFFFFFA8FFFFA8FFFFFFA8FFFFA8A8FFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD50FFA8FFFFFFA8FFFF%FF7DFFFFFFA8FFFFFFA8FFFFFF7DFFFFA8A8FFFFA8A8FFA8A8FFFFA8A8FF%FFA8A8FFFFFFA8FD6BFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD5CFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8A8FFFFA8A8FF%FFA8A8FFFFFFA8FD67FFA8FD06FFA8FFFFFFA8FFFFFFA8FD6CFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FD38FFFF%%EndData%ADO_ContainsXMP: MainFirst
%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Deform.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligraphicBrushTool.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (PlanetX.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathfinderS.aip)%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.749721 0.679194 0.670497 0.901457 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{userdict /EPSHandler1_pdfmark /cleartomark load put
userdict /EPSHandler1_ReadMetadata_pdfmark {flushfile cleartomark} bind put}
{ userdict /EPSHandler1_pdfmark /pdfmark load put
userdict /EPSHandler1_ReadMetadata_pdfmark {/PUT pdfmark} bind put } ifelse
[/NamespacePush EPSHandler1_pdfmark
[/_objdef {eps_metadata_stream} /type /stream /OBJ EPSHandler1_pdfmark
[{eps_metadata_stream} 2 dict begin
/Type /Metadata def /Subtype /XML def currentdict end /PUT EPSHandler1_pdfmark
[{eps_metadata_stream}
currentfile 0 (% &&end EPS XMP packet marker&&)
/SubFileDecode filter EPSHandler1_ReadMetadata_pdfmark
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c002 79.164352, 2020/01/30-15:50:38        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:lr="http://ns.adobe.com/lightroom/1.0/"
   xmp:CreatorTool="Adobe Illustrator(R) 8.0"
   xmp:CreateDate="2021-06-19T15:39Z"
   xmp:MetadataDate="2021-06-20T17:38:56-07:00"
   xmpMM:InstanceID="xmp.iid:01ef76d1-fadd-4e86-b735-f8f0bebdb002"
   xmpMM:DocumentID="xmp.did:6922cd14-a9cc-46cf-af36-7ca1e5650868"
   xmpMM:OriginalDocumentID="xmp.did:6922cd14-a9cc-46cf-af36-7ca1e5650868">
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:6922cd14-a9cc-46cf-af36-7ca1e5650868"
      stEvt:when="2021-06-19T16:03:02-07:00"
      stEvt:softwareAgent="Adobe Bridge 2020 (Macintosh)"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:01ef76d1-fadd-4e86-b735-f8f0bebdb002"
      stEvt:when="2021-06-20T17:38:56-07:00"
      stEvt:softwareAgent="Adobe Bridge 2020 (Macintosh)"
      stEvt:changed="/metadata"/>
    </rdf:Seq>
   </xmpMM:History>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>(Brady Erickson) ()</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">(Asset 171.eps)</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:subject>
    <rdf:Bag>
     <rdf:li>GRAPHIC</rdf:li>
    </rdf:Bag>
   </dc:subject>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">One hundred-point star</rdf:li>
    </rdf:Alt>
   </dc:description>
   <lr:hierarchicalSubject>
    <rdf:Bag>
     <rdf:li>GRAPHIC</rdf:li>
    </rdf:Bag>
   </lr:hierarchicalSubject>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                
<?xpacket end="w"?>
% &&end EPS XMP packet marker&&
[/Document
1 dict begin /Metadata {eps_metadata_stream} def
currentdict end /BDC EPSHandler1_pdfmark
[/NamespacePop EPSHandler1_pdfmark
%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 A0 O0.749721 0.679194 0.670497 0.901457 0 0 0 Xa0 J 0 j 1 w 10 M []0 d0 XR114.7486 222.8721 m131.7091 655.225 L121.5328 222.6837 L165.6302 653.1049 L128.2699 222.0241 L199.3158 648.8177 L135.007 220.9405 L232.7187 642.4575 L141.6499 219.48 L265.6033 634.0243 L148.1514 217.5955 L297.9226 623.5182 L154.5588 215.287 L329.4881 611.0333 L160.7776 212.6016 L360.2526 596.5697 L166.8552 209.4921 L390.0279 580.1745 L172.6971 206.0529 L418.6724 561.989 L178.3035 202.2368 L446.1861 542.0133 L183.6744 198.0437 L472.3337 520.3415 L188.7626 193.568 L497.1149 497.1149 L193.5681 188.7625 L520.3886 472.3336 L198.0438 183.6744 L542.0133 446.139 L202.2368 178.3035 L561.9891 418.6723 L206.0529 172.65 L580.2217 389.9807 L209.4921 166.808 L596.5698 360.2055 L212.6016 160.7776 L611.0334 329.4881 L215.287 154.5116 L623.5182 297.9226 L217.5955 148.1514 L634.0243 265.6033 L219.48 141.6028 L642.5046 232.6715 L220.9876 135.007 L648.8648 199.3158 L222.0241 128.2699 L653.1049 165.6302 L222.6837 121.5328 L655.225 131.7091 L222.8721 114.7014 L655.225 97.7409 L222.6837 107.9172 L653.1049 63.8198 L222.0241 101.1801 L648.8648 30.1342 L220.9876 94.443 L642.5046 -3.26869 L219.48 87.8001 L634.0243 -36.1533 L217.5955 81.2986 L623.5182 -68.4726 L215.287 74.8912 L611.0334 -100.0381 L212.6016 68.6724 L596.5698 -130.8026 L209.4921 62.5948 L580.2217 -160.5779 L206.0529 56.7529 L561.9891 -189.2224 L202.2368 51.1464 L542.0133 -216.7361 L198.0438 45.7756 L520.3886 -242.8837 L193.5681 40.6874 L497.1149 -267.6649 L188.7626 35.8819 L472.3337 -290.9386 L183.6744 31.4062 L446.1861 -312.5633 L178.3035 27.2132 L418.6724 -332.5391 L172.6971 23.3971 L390.0279 -350.7717 L166.8552 19.9579 L360.2526 -367.1198 L160.7776 16.8484 L329.4881 -381.5834 L154.5588 14.163 L297.9226 -394.0682 L148.1514 11.8545 L265.6033 -404.5743 L141.6499 9.96996 L232.7187 -413.0546 L135.007 8.46239 L199.3158 -419.4148 L128.2699 7.42591 L165.6302 -423.6549 L121.5328 6.76633 L131.7091 -425.775 L114.7486 6.57791 L97.7409 -425.775 L107.9172 6.76633 L63.8198 -423.6549 L101.1801 7.42591 L30.1342 -419.4148 L94.443 8.46239 L-3.22153 -413.0546 L87.8472 9.96996 L-36.1533 -404.5743 L81.2986 11.8545 L-68.4726 -394.0682 L74.9384 14.163 L-100.0381 -381.5834 L68.6724 16.8484 L-130.7555 -367.1198 L62.6419 19.9579 L-160.5307 -350.7717 L56.8 23.3971 L-189.2223 -332.5391 L51.1465 27.2132 L-216.689 -312.5633 L45.7756 31.4062 L-242.8837 -290.9386 L40.6875 35.8819 L-267.6649 -267.6649 L35.882 40.6874 L-290.8915 -242.8837 L31.4063 45.7756 L-312.5633 -216.7361 L27.2132 51.1464 L-332.539 -189.2224 L23.3971 56.7529 L-350.7245 -160.5779 L19.9579 62.5948 L-367.1197 -130.8026 L16.8484 68.6724 L-381.5833 -100.0381 L14.163 74.8912 L-394.0682 -68.4726 L11.8545 81.2986 L-404.5743 -36.1533 L9.96999 87.8001 L-413.0075 -3.26869 L8.50951 94.443 L-419.3677 30.1342 L7.4259 101.1801 L-423.6549 63.8198 L6.76633 107.9172 L-425.775 97.7409 L6.57787 114.7014 L-425.775 131.7091 L6.76633 121.5328 L-423.6549 165.6302 L7.4259 128.2699 L-419.3677 199.3158 L8.50951 135.007 L-413.0075 232.6715 L9.96999 141.6028 L-404.5743 265.6033 L11.8545 148.1514 L-394.0682 297.9226 L14.163 154.5116 L-381.5833 329.4881 L16.8484 160.7776 L-367.1197 360.2055 L19.9579 166.808 L-350.7245 389.9807 L23.3971 172.65 L-332.539 418.6723 L27.2132 178.3035 L-312.5633 446.139 L31.4063 183.6744 L-290.8915 472.3336 L35.882 188.7625 L-267.6649 497.1149 L40.6875 193.568 L-242.8837 520.3415 L45.7756 198.0437 L-216.689 542.0133 L51.1465 202.2368 L-189.2223 561.989 L56.8 206.0529 L-160.5307 580.1745 L62.6419 209.4921 L-130.7555 596.5697 L68.6724 212.6016 L-100.0381 611.0333 L74.9384 215.287 L-68.4726 623.5182 L81.2986 217.5955 L-36.1533 634.0243 L87.8472 219.48 L-3.22153 642.4575 L94.443 220.9405 L30.1342 648.8177 L101.1801 222.0241 L63.8198 653.1049 L107.9172 222.6837 L97.7409 655.225 L114.7486 222.8721 LfLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%Trailer
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{userdict /EPSHandler1_pdfmark /cleartomark load put}
{ userdict /EPSHandler1_pdfmark /pdfmark load put} ifelse
[/EMC EPSHandler1_pdfmark
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF